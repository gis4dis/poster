version: '3.1'

services:

# MAIN WEB CONTAINER
  poster-web:
    container_name: poster-web
    build: .
    image: poster-web:latest
    command: bash -c "./buildpack-run.sh; python manage.py collectstatic --no-input;jupyter nbextension enable --py widgetsnbextension; python manage.py runserver 0.0.0.0:8000 & python manage.py shell_plus --notebook"
    ports:
      - 8000:8000
      - 8001:8888
    env_file: .env
    volumes:
      - .:/code
      - poster-media-data:/media
    depends_on:
      - poster-postgres
      - poster-redis
      - poster-mongo
      - poster-minio

# CELERY WORKER AND BEAT CONTAINERS derived from above
  poster-celery_worker:
    container_name: poster-celery_worker
    image: poster-web:latest
    command: python -m celery -A poster worker -l debug
    env_file: .env
    volumes:
      - poster-media-data:/media
    depends_on:
      - poster-web

  poster-celery_beat:
    container_name: poster-celery_beat
    image: poster-web:latest
    command: python -m celery -A poster beat --pidfile= -l debug --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file: .env
    volumes:
      - poster-media-data:/media
    depends_on:
      - poster-web

  poster-flower:
    container_name: poster-flower
    image: poster-web:latest
    command: python -m flower -A poster --port=5555
    env_file: .env
    ports:
      - 5555:5555
    volumes:
      - poster-media-data:/media
    depends_on:
      - poster-web

# S3 FILESTORAGE
  poster-minio:
    container_name: poster-minio
    image: minio/minio
    command: server /export
    ports:
      - 9000:9000
    env_file: .env
    volumes:
      - ./var/s3storage:/export
      - ./var/minio:/root/.minio
    environment:
      - "MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE"
      - "MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"

# POSTGRES, REDIS, MONGO DB CONTAINERS
  poster-postgres:
    container_name: poster-postgres
    image: mdillon/postgis:9.5
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data/

  poster-redis:
    container_name: poster-redis
    image: redis:3.0.0
    ports:
      - 127.0.0.1:6379:6379
    volumes:
      - poster-redis-data:/data

  poster-mongo:
    container_name: poster-mongo
    image: mongo:3.2
    command: --storageEngine wiredTiger
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - poster-mongo-data:/data/db

# VOLUMES DEFINITION
volumes:
  poster-redis-data:
  poster-mongo-data:
  poster-media-data: